[{"title":"test1","url":"/2025/05/03/test1/","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>222</p>\n<img src=\"/2025/05/03/test1/a.jpg\" class=\"\" title=\"This is an example image\">\n"},{"title":"Hello World","url":"/2025/05/01/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"使用Springboot写的一些工具类","url":"/2025/05/08/%E4%BD%BF%E7%94%A8Springboot%E5%86%99%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E7%B1%BB/","content":"<h4 id=\"引子\"><a href=\"#引子\" class=\"headerlink\" title=\"引子\"></a>引子</h4><p>想在拦截器或过滤器里对请求体做些校验或者解密工作，但是默认情况下，<code>HttpServletRequest</code>的内容只能读取一次，因为流不可重复读取（<code>ByteArrayInputStream</code>和<code>ByteArrayOutputStream</code>除外，另外这两个类的close方法是空的，即不会被关闭，因为其缓存了所有内容，可以通过mark和reset方法回档重读）</p>\n<p>方案：</p>\n<ul>\n<li><p>使用<code>org.springframework.web.util.ContentCachingRequestWrapper</code></p>\n<blockquote>\n<p>类说明：<code>HttpServletRequest</code> 包装器缓存从输入流和读取器读取的所有内容，并允许通过<code>getContentAsByteArray()</code>获取.<br>该类充当拦截器，<strong>仅在读取内容时缓存内容，否则不会导致内容被读取。这意味着如果请求内容没有被使用，那么内容就不会被缓存</strong>，并且不能通过<code>getContentAsByteArray()</code>来检索。</p>\n</blockquote>\n</li>\n<li><p>自定义包装器，这里可以继承<code>HttpServletRequestWrapper</code>。下面是我自定义的一个缓存包装器，最近有个需求是和第三方交互，别人调用我们的接口时需要把请求体加密，然后我们响应结果的时候也需要把响应体加密，最后放在一个body字段中，以json形式返回。</p>\n<p>举个例子：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">通常情况下的请求体入参 姑且称为rawJson</span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;name&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;zhangsan&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;age&quot;</span><span class=\"punctuation\">:</span> <span class=\"number\">18</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">经过加密  加密工具类.encrypt(rawJson) = xxxx</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight json\"><table><tr><td class=\"code\"><pre><span class=\"line\">最终的请求体</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;body&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;xxxx&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure></li>\n</ul>\n<p>项目里原本的接口都是在<code>Controller</code>层做加密解密，不是不行，但是极为难看，而且代码冗余度高，而且如果你使用了<code>jsr</code>参数校验的注解，那你还必须手动触发校验，因为你接收到的请求体不是直接映射到<code>rawJson</code>对应的<code>DTO</code>上的，而是要在代码里解密后反序列化才能获取最终的<code>DTO</code>。</p>\n<p>小声bb：虽然我最后也是在Controller做的加解密，因为这边的项目需求都是各做各的，基本没有统一的格式，但是啊，假如以后我参与了一个全新的项目，那我是不是可以约定好以一种统一的格式去完成类似的需求呢？</p>\n<p>所以我就想到了能不能在拦截器里配置需要加密解密的接口白名单，或者以某个请求头或者其他参数判断某个接口是否需要加密，之后在拦截器中对这些接口统一做拦截加密解密处理。这样把Controller里的业务代码和加密解密解耦合，而且下次提供接口给第三方，保持约定好的格式，只需要在白名单上加上指定接口，开发只需要专注业务逻辑即可。</p>\n<p>书接上回，由于我需要对<code>HttpServletRequest</code>的请求体多次读取，而且还要篡改请求体内容，而且考虑到不能影响其他拦截器&#x2F;过滤器的工作，所以<code>ContentCachingRequestWrapper</code>不满足我的要求，因为其缓存的请求体内容被final修饰，无法继承重写，其次在它之后生效的过滤器只能以<code>((ContentCachingRequestWrapper) request).getContentAsByteArray()</code>形式获取请求体，不能使用<code>getInputStream</code>或者<code>getReader</code>获取。</p>\n<p>当然改还是能改的，可以用反射把它的<code>cachedContent</code>字段重新赋值，如果设置了缓存大小限制，也要注意</p>\n<p><code>ContentCachingRequestWrapper</code>概览</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ContentCachingRequestWrapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServletRequestWrapper</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ByteArrayOutputStream cachedContent;</span><br><span class=\"line\"></span><br><span class=\"line\">   <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">   <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> Integer contentCacheLimit;</span><br><span class=\"line\">   </span><br><span class=\"line\">   <span class=\"comment\">// 一些属性和方法  </span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>反射示例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 1. 包装请求：缓存并解密请求体</span></span><br><span class=\"line\">       <span class=\"type\">ContentCachingRequestWrapper</span> <span class=\"variable\">requestWrapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ContentCachingRequestWrapper</span>(request);;</span><br><span class=\"line\">       <span class=\"keyword\">if</span> (isEncryptedRequest(request)) &#123;</span><br><span class=\"line\">           <span class=\"type\">EncDTO</span> <span class=\"variable\">encDTO</span> <span class=\"operator\">=</span> mapper.readValue(requestWrapper.getInputStream(), EncDTO.class);</span><br><span class=\"line\">           <span class=\"type\">byte</span>[] decryptedBody = decrypt(encDTO.getEncBody());</span><br><span class=\"line\">           <span class=\"type\">ByteArrayOutputStream</span> <span class=\"variable\">baOut</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayOutputStream</span>(decryptedBody.length);</span><br><span class=\"line\">           baOut.write(decryptedBody);</span><br><span class=\"line\">           <span class=\"type\">Field</span> <span class=\"variable\">cachedContent</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">           <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">               cachedContent = ContentCachingRequestWrapper.class.getDeclaredField(<span class=\"string\">&quot;cachedContent&quot;</span>);</span><br><span class=\"line\">               cachedContent.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">               cachedContent.set(requestWrapper, baOut);</span><br><span class=\"line\">           &#125; <span class=\"keyword\">catch</span> (NoSuchFieldException | IllegalAccessException e) &#123;</span><br><span class=\"line\">               <span class=\"comment\">//</span></span><br><span class=\"line\">           &#125;</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">       <span class=\"comment\">// 2. 执行后续流程（Controller）</span></span><br><span class=\"line\">       chain.doFilter(requestWrapper, response);</span><br></pre></td></tr></table></figure>\n\n<p>我们也可以自己做缓存。</p>\n<h5 id=\"下面的是一个节约内存但是多处受限的版本\"><a href=\"#下面的是一个节约内存但是多处受限的版本\" class=\"headerlink\" title=\"下面的是一个节约内存但是多处受限的版本\"></a>下面的是一个节约内存但是多处受限的版本</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\"> * 1. 只缓存一次，但是支持对请求体多次读取。</span></span><br><span class=\"line\"><span class=\"comment\"> * 2. 要注意读取流的时候不能将其关闭, 直接从InputStream读取不受关闭影响，但是从包装类中读取会受close影响，如BufferedReader</span></span><br><span class=\"line\"><span class=\"comment\"> * 3. 不支持多线程同时对一个OnceCachedRequestWrapper对象读</span></span><br><span class=\"line\"><span class=\"comment\"> * 4. 对2的补充，比如使用ObjectMapper读取时，使用mapper.readValue(xx.getReader(), xx)就会自动关闭Reader， 可以禁用mapper自动关闭不属于解析器的基础输入源</span></span><br><span class=\"line\"><span class=\"comment\"> * 5. 更省心的版本是在getInputStream和getReader方法中直接new一个全新的CachedServletInputStream类</span></span><br><span class=\"line\"><span class=\"comment\"> */</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OnceCachedRequestWrapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">HttpServletRequestWrapper</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">ObjectMapper</span> <span class=\"variable\">mapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ObjectMapper</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">static</span> &#123;</span><br><span class=\"line\">        mapper.registerModule(<span class=\"keyword\">new</span> <span class=\"title class_\">JavaTimeModule</span>());</span><br><span class=\"line\">        mapper.configure(JsonParser.Feature.AUTO_CLOSE_SOURCE, <span class=\"literal\">false</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> CachedServletInputStream content;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> BufferedReader contentReader;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">OnceCachedRequestWrapper</span><span class=\"params\">(HttpServletRequest request, <span class=\"type\">byte</span>[] content)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(request);</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.content = <span class=\"keyword\">new</span> <span class=\"title class_\">CachedServletInputStream</span>(content);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ServletInputStream <span class=\"title function_\">getInputStream</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        content.reset();</span><br><span class=\"line\">        <span class=\"keyword\">return</span> content;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> BufferedReader <span class=\"title function_\">getReader</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (contentReader == <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">            contentReader = <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(getInputStream(), StandardCharsets.UTF_8));</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            content.reset();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> contentReader;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CachedServletInputStream</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ServletInputStream</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> ByteArrayInputStream buffer;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"title function_\">CachedServletInputStream</span><span class=\"params\">(<span class=\"type\">byte</span>[] contents)</span> &#123;</span><br><span class=\"line\">            <span class=\"built_in\">this</span>.buffer = <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayInputStream</span>(contents);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">read</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> buffer.read();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isFinished</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> buffer.available() == <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isReady</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setReadListener</span><span class=\"params\">(ReadListener listener)</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UnsupportedOperationException</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mark</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            mark(<span class=\"number\">0</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">mark</span><span class=\"params\">(<span class=\"type\">int</span> readAheadLimit)</span> &#123;</span><br><span class=\"line\">            buffer.mark(readAheadLimit);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">reset</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            buffer.reset();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"加密解密过滤器完整示例：\"><a href=\"#加密解密过滤器完整示例：\" class=\"headerlink\" title=\"加密解密过滤器完整示例：\"></a>加密解密过滤器完整示例：</h4><h5 id=\"待加密接口\"><a href=\"#待加密接口\" class=\"headerlink\" title=\"待加密接口\"></a>待加密接口</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@RestController</span></span><br><span class=\"line\"><span class=\"meta\">@RequestMapping(&quot;biz&quot;)</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">BizService</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@PostMapping(&quot;hello&quot;)</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Result&lt;Void&gt; <span class=\"title function_\">hello</span><span class=\"params\">(<span class=\"meta\">@RequestBody</span> Cat cat)</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;&gt;&gt;&gt;&gt;&quot;</span> + cat);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> Result.success();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Cat</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">        <span class=\"meta\">@NotBlank</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Past</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> LocalDateTime birth;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"meta\">@Min(1)</span></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"type\">int</span> age;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> String habbit;</span><br><span class=\"line\">        </span><br><span class=\"line\">        <span class=\"comment\">// getter 、 setter 、 hashcode 、tostring</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"通用返回格式\"><a href=\"#通用返回格式\" class=\"headerlink\" title=\"通用返回格式\"></a>通用返回格式</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Result</span>&lt;T&gt; <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> code;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> success;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String message;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> T data;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"comment\">// getter、setter、hashcode、tostring </span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> Result&lt;Void&gt; <span class=\"title function_\">success</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        Result&lt;Void&gt; result = <span class=\"keyword\">new</span> <span class=\"title class_\">Result</span>&lt;&gt;();</span><br><span class=\"line\">        result.setSuccess(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        result.setCode(<span class=\"number\">200</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> result;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"约定好的加密格式\"><a href=\"#约定好的加密格式\" class=\"headerlink\" title=\"约定好的加密格式\"></a>约定好的加密格式</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EncDTO</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Serializable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"type\">long</span> <span class=\"variable\">serialVersionUID</span> <span class=\"operator\">=</span> <span class=\"number\">213L</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String encBody;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// getter、setter、hashcode、tostring</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"自定义HttpServletRequest包装器，用于多次读取请求体\"><a href=\"#自定义HttpServletRequest包装器，用于多次读取请求体\" class=\"headerlink\" title=\"自定义HttpServletRequest包装器，用于多次读取请求体\"></a>自定义HttpServletRequest包装器，用于多次读取请求体</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OnceCachedRequestWrapper</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">ContentCachingRequestWrapper</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">OnceCachedRequestWrapper</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(request);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> ServletInputStream <span class=\"title function_\">getInputStream</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 注意，上面已经介绍过ContentCachingRequestWrapper只是把请求体内容缓存下来，实际上使用getInputStream()或者           // getReader()仍然只能读取一次，此处判断当getInputStream()已经读取过时，利用缓存好的内容重新new个流返回</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"built_in\">super</span>.getInputStream().isFinished()) &#123;</span><br><span class=\"line\">            <span class=\"type\">ByteArrayInputStream</span> <span class=\"variable\">byteArrayInputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayInputStream</span>(getContentAsByteArray());</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ServletInputStream</span>() &#123;</span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"type\">int</span> <span class=\"title function_\">read</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> byteArrayInputStream.read();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isFinished</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> byteArrayInputStream.available() == <span class=\"number\">0</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isReady</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">                <span class=\"meta\">@Override</span></span><br><span class=\"line\">                <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">setReadListener</span><span class=\"params\">(ReadListener listener)</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> <span class=\"title class_\">UnsupportedOperationException</span>();</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">super</span>.getInputStream();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> BufferedReader <span class=\"title function_\">getReader</span><span class=\"params\">()</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BufferedReader</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">InputStreamReader</span>(getInputStream(), StandardCharsets.UTF_8));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"执行加密解密逻辑的过滤器-这里用Base64做演示\"><a href=\"#执行加密解密逻辑的过滤器-这里用Base64做演示\" class=\"headerlink\" title=\"执行加密解密逻辑的过滤器 这里用Base64做演示\"></a>执行加密解密逻辑的过滤器 这里用Base64做演示</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@Order(0)</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">CryptoFilter</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain chain)</span></span><br><span class=\"line\">            <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 1. 包装请求：缓存并解密请求体</span></span><br><span class=\"line\">        <span class=\"type\">OnceCachedRequestWrapper</span> <span class=\"variable\">requestWrapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">OnceCachedRequestWrapper</span>(request);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEncryptedRequest(request)) &#123;</span><br><span class=\"line\">            <span class=\"type\">EncDTO</span> <span class=\"variable\">encDTO</span> <span class=\"operator\">=</span> mapper.readValue(requestWrapper.getInputStream(), EncDTO.class);</span><br><span class=\"line\">            <span class=\"type\">byte</span>[] decryptedBody = decrypt(encDTO.getEncBody());</span><br><span class=\"line\">            rewriteRequestBody(requestWrapper, decryptedBody);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"comment\">// 2. 包装响应：缓存响应体</span></span><br><span class=\"line\">        <span class=\"type\">ContentCachingResponseWrapper</span> <span class=\"variable\">responseWrapper</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ContentCachingResponseWrapper</span>(response);</span><br><span class=\"line\">        <span class=\"comment\">// 3. 执行后续流程（Controller）</span></span><br><span class=\"line\">        chain.doFilter(requestWrapper, responseWrapper);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (isEncryptedResponse(responseWrapper)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 注意，从Controller返回的时候，responseWrapper已经被写入了一次，所以getContentAsByteArray可以直接拿到</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">encrypt</span> <span class=\"operator\">=</span> encrypt(responseWrapper.getContentAsByteArray());</span><br><span class=\"line\">            rewriteReponseBody(responseWrapper, encrypt);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        responseWrapper.copyBodyToResponse();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rewriteReponseBody</span><span class=\"params\">(ContentCachingResponseWrapper responseWrapper, String contentJson)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">Field</span> <span class=\"variable\">content</span> <span class=\"operator\">=</span> ContentCachingResponseWrapper.class.getDeclaredField(<span class=\"string\">&quot;content&quot;</span>);</span><br><span class=\"line\">            content.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">            <span class=\"type\">FastByteArrayOutputStream</span> <span class=\"variable\">baOut</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FastByteArrayOutputStream</span>(<span class=\"number\">1024</span>);</span><br><span class=\"line\">            baOut.write(contentJson.getBytes(StandardCharsets.UTF_8));</span><br><span class=\"line\">            content.set(responseWrapper, baOut);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IllegalAccessException | NoSuchFieldException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">void</span> <span class=\"title function_\">rewriteRequestBody</span><span class=\"params\">(DecryptedRequestWrapper requestWrapper, <span class=\"type\">byte</span>[] content)</span> <span class=\"keyword\">throws</span> IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">ByteArrayOutputStream</span> <span class=\"variable\">baOut</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">ByteArrayOutputStream</span>(content.length);</span><br><span class=\"line\">        baOut.write(content);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">cachedContent</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            cachedContent = ReflectionUtils.findField(DecryptedRequestWrapper.class, <span class=\"string\">&quot;cachedContent&quot;</span>);</span><br><span class=\"line\">            ReflectionUtils.makeAccessible(cachedContent);</span><br><span class=\"line\">            cachedContent.set(requestWrapper, baOut);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IllegalAccessException e) &#123;</span><br><span class=\"line\">            <span class=\"comment\">//</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 判断是否需要解密/加密（根据请求头或URL路径） 自定义</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEncryptedRequest</span><span class=\"params\">(HttpServletRequest request)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">boolean</span> <span class=\"title function_\">isEncryptedResponse</span><span class=\"params\">(HttpServletResponse response)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">true</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 解密逻辑（示例）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">byte</span>[] decrypt(String encryptedBody) &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 调用实际解密算法（如AES）</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> Base64Utils.decodeFromString(encryptedBody);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 加密逻辑（示例）</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> String <span class=\"title function_\">encrypt</span><span class=\"params\">(<span class=\"type\">byte</span>[] plainText)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 调用实际加密算法（如AES）</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;&#123;\\&quot;encBody\\&quot;:\\&quot;&quot;</span> + Base64Utils.encodeToString(plainText) + <span class=\"string\">&quot;\\&quot;&#125;&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"模拟业务中其他过滤器\"><a href=\"#模拟业务中其他过滤器\" class=\"headerlink\" title=\"模拟业务中其他过滤器\"></a>模拟业务中其他过滤器</h5><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Order(1)</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OtherFilter1</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">ContentCachingRequestWrapper</span> <span class=\"variable\">request1</span> <span class=\"operator\">=</span> (ContentCachingRequestWrapper) request;</span><br><span class=\"line\">        BizService.<span class=\"type\">Cat</span> <span class=\"variable\">dto</span> <span class=\"operator\">=</span> mapper.readValue(request1.getContentAsByteArray(), BizService.Cat.class);</span><br><span class=\"line\">        System.out.println(getFilterName() + <span class=\"string\">&quot;&gt;&gt;&gt;&gt;&quot;</span> + dto);</span><br><span class=\"line\">        filterChain.doFilter(request, response);</span><br><span class=\"line\">        <span class=\"type\">ContentCachingResponseWrapper</span> <span class=\"variable\">response1</span> <span class=\"operator\">=</span> (ContentCachingResponseWrapper) response;</span><br><span class=\"line\">        System.out.println(getFilterName() + <span class=\"string\">&quot;&gt;&gt;&gt;&gt;&quot;</span> + mapper.readValue(response1.getContentAsByteArray(), Result.class));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Order(2)</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OtherFilter2</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"type\">ContentCachingRequestWrapper</span> <span class=\"variable\">request1</span> <span class=\"operator\">=</span> (ContentCachingRequestWrapper) request;</span><br><span class=\"line\">        BizService.<span class=\"type\">Cat</span> <span class=\"variable\">dto</span> <span class=\"operator\">=</span> mapper.readValue(request1.getContentAsByteArray(), BizService.Cat.class);</span><br><span class=\"line\">        System.out.println(getFilterName() + <span class=\"string\">&quot;&gt;&gt;&gt;&gt;&quot;</span> + dto);</span><br><span class=\"line\">        filterChain.doFilter(request, response);</span><br><span class=\"line\">        <span class=\"type\">ContentCachingResponseWrapper</span> <span class=\"variable\">response1</span> <span class=\"operator\">=</span> (ContentCachingResponseWrapper) response;</span><br><span class=\"line\">        System.out.println(getFilterName() + <span class=\"string\">&quot;&gt;&gt;&gt;&gt;&quot;</span> + mapper.readValue(response1.getContentAsByteArray(), Result.class));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Order(3)</span></span><br><span class=\"line\"><span class=\"meta\">@Component</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">OtherFilter3</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">OncePerRequestFilter</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">void</span> <span class=\"title function_\">doFilterInternal</span><span class=\"params\">(HttpServletRequest request, HttpServletResponse response, FilterChain filterChain)</span> <span class=\"keyword\">throws</span> ServletException, IOException &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 注意差别 此处用request.getInputStream()也行</span></span><br><span class=\"line\">        BizService.<span class=\"type\">Cat</span> <span class=\"variable\">dto</span> <span class=\"operator\">=</span> mapper.readValue(request.getInputStream(), BizService.Cat.class);</span><br><span class=\"line\">        System.out.println(getFilterName() + <span class=\"string\">&quot;&gt;&gt;&gt;&gt;&quot;</span> + dto);</span><br><span class=\"line\">        filterChain.doFilter(request, response);</span><br><span class=\"line\">        <span class=\"type\">ContentCachingResponseWrapper</span> <span class=\"variable\">response1</span> <span class=\"operator\">=</span> (ContentCachingResponseWrapper) response;</span><br><span class=\"line\">        System.out.println(getFilterName() + <span class=\"string\">&quot;&gt;&gt;&gt;&gt;&quot;</span> + mapper.readValue(response1.getContentAsByteArray(), Result.class));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h5 id=\"运行结果\"><a href=\"#运行结果\" class=\"headerlink\" title=\"运行结果\"></a>运行结果</h5><p>示例请求</p>\n<figure class=\"highlight http\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">POST</span> <span class=\"string\">/biz/hello</span> <span class=\"meta\">HTTP/1.1</span></span><br><span class=\"line\"><span class=\"attribute\">Host</span><span class=\"punctuation\">: </span>localhost:8080</span><br><span class=\"line\"><span class=\"attribute\">X-Encrypted</span><span class=\"punctuation\">: </span>true</span><br><span class=\"line\"><span class=\"attribute\">Content-Type</span><span class=\"punctuation\">: </span>application/json</span><br><span class=\"line\"><span class=\"attribute\">Content-Length</span><span class=\"punctuation\">: </span>115</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"language-json\"><span class=\"punctuation\">&#123;</span></span></span><br><span class=\"line\"><span class=\"language-json\">    <span class=\"attr\">&quot;encBody&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;eyJuYW1lIjoienp6eiIsImJpcnRoIjpbMjAyMCwxMSw4LDExLDIwXSwiYWdlIjoxMywiaGFiYml0Ijoi5ZCD6aWtIn0=&quot;</span></span></span><br><span class=\"line\"><span class=\"language-json\"><span class=\"punctuation\">&#125;</span></span></span><br></pre></td></tr></table></figure>\n\n<p>控制台</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">otherFilter1&gt;&gt;&gt;&gt;Cat&#123;name=<span class=\"string\">&#x27;zzzz&#x27;</span>, birth=<span class=\"number\">2020</span>-<span class=\"number\">11</span>-08T11:<span class=\"number\">20</span>, age=<span class=\"number\">13</span>, habbit=<span class=\"string\">&#x27;吃饭&#x27;</span>&#125;</span><br><span class=\"line\">otherFilter2&gt;&gt;&gt;&gt;Cat&#123;name=<span class=\"string\">&#x27;zzzz&#x27;</span>, birth=<span class=\"number\">2020</span>-<span class=\"number\">11</span>-08T11:<span class=\"number\">20</span>, age=<span class=\"number\">13</span>, habbit=<span class=\"string\">&#x27;吃饭&#x27;</span>&#125;</span><br><span class=\"line\">otherFilter3&gt;&gt;&gt;&gt;Cat&#123;name=<span class=\"string\">&#x27;zzzz&#x27;</span>, birth=<span class=\"number\">2020</span>-<span class=\"number\">11</span>-08T11:<span class=\"number\">20</span>, age=<span class=\"number\">13</span>, habbit=<span class=\"string\">&#x27;吃饭&#x27;</span>&#125;</span><br><span class=\"line\">Cat&#123;name=<span class=\"string\">&#x27;zzzz&#x27;</span>, birth=<span class=\"number\">2020</span>-<span class=\"number\">11</span>-08T11:<span class=\"number\">20</span>, age=<span class=\"number\">13</span>, habbit=<span class=\"string\">&#x27;吃饭&#x27;</span>&#125;</span><br><span class=\"line\">otherFilter3&gt;&gt;&gt;&gt;Result&#123;code=<span class=\"number\">200</span>, success=<span class=\"literal\">true</span>, message=<span class=\"string\">&#x27;null&#x27;</span>, data=<span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">otherFilter2&gt;&gt;&gt;&gt;Result&#123;code=<span class=\"number\">200</span>, success=<span class=\"literal\">true</span>, message=<span class=\"string\">&#x27;null&#x27;</span>, data=<span class=\"literal\">null</span>&#125;</span><br><span class=\"line\">otherFilter1&gt;&gt;&gt;&gt;Result&#123;code=<span class=\"number\">200</span>, success=<span class=\"literal\">true</span>, message=<span class=\"string\">&#x27;null&#x27;</span>, data=<span class=\"literal\">null</span>&#125;</span><br></pre></td></tr></table></figure>\n\n<p>响应体</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#123;</span><br><span class=\"line\">    &quot;encBody&quot;: &quot;eyJjb2RlIjoyMDAsInN1Y2Nlc3MiOnRydWUsIm1lc3NhZ2UiOm51bGwsImRhdGEiOm51bGx9&quot;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>参数构造，查看</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">main() &#123;</span><br><span class=\"line\">    BizService.<span class=\"type\">Cat</span> <span class=\"variable\">cat</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">BizService</span>.Cat();</span><br><span class=\"line\">    cat.setAge(<span class=\"number\">13</span>);</span><br><span class=\"line\">    cat.setName(<span class=\"string\">&quot;zzzz&quot;</span>);</span><br><span class=\"line\">    cat.setBirth(LocalDateTime.of(<span class=\"number\">2020</span>, <span class=\"number\">11</span>, <span class=\"number\">8</span>, <span class=\"number\">11</span>, <span class=\"number\">20</span>));</span><br><span class=\"line\">    cat.setAge(<span class=\"number\">13</span>);</span><br><span class=\"line\">    cat.setHabbit(<span class=\"string\">&quot;吃饭&quot;</span>);</span><br><span class=\"line\">    System.out.println(Base64Utils.encodeToString(mapper.writeValueAsBytes(cat)));</span><br><span class=\"line\">    System.out.println(cat);</span><br><span class=\"line\">System.out.println(mapper.readValue(Base64Utils.decodeFromString(<span class=\"string\">&quot;eyJjb2RlIjoyMDAsInN1Y2Nlc3MiOnRydWUsIm1lc3NhZ2UiOm51bGwsImRhdGEiOm51bGx9&quot;</span>), Result.class));</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>控制台输出</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">eyJuYW1lIjoienp6eiIsImJpcnRoIjpbMjAyMCwxMSw4LDExLDIwXSwiYWdlIjoxMywiaGFiYml0Ijoi5ZCD6aWtIn0=</span><br><span class=\"line\">Cat&#123;name=<span class=\"string\">&#x27;zzzz&#x27;</span>, birth=<span class=\"number\">2020</span>-<span class=\"number\">11</span>-08T11:<span class=\"number\">20</span>, age=<span class=\"number\">13</span>, habbit=<span class=\"string\">&#x27;吃饭&#x27;</span>&#125;</span><br><span class=\"line\">Result&#123;code=<span class=\"number\">200</span>, success=<span class=\"literal\">true</span>, message=<span class=\"string\">&#x27;null&#x27;</span>, data=<span class=\"literal\">null</span>&#125;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"关于springboot的注解校验","url":"/2025/05/07/%E5%85%B3%E4%BA%8Espringboot%E7%9A%84%E6%B3%A8%E8%A7%A3%E6%A0%A1%E9%AA%8C/","content":"<p>场景：</p>\n<p>某些情况下，和第三方进行接口交互时，比如提供接口给第三方用，第三方的入参可能是加密的，需要解密后再进行参数校验，这个时候如果使用了校验注解，需要手动触发注解校验</p>\n<ol>\n<li>引入依赖</li>\n</ol>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-validation<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<ol start=\"2\">\n<li>手动校验</li>\n</ol>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@Slf4j</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">ValidatorUtils</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Validator</span> <span class=\"variable\">validatorFast</span> <span class=\"operator\">=</span> Validation.byProvider(HibernateValidator.class)</span><br><span class=\"line\">            .configure()</span><br><span class=\"line\">            .failFast(<span class=\"literal\">true</span>)</span><br><span class=\"line\">            .buildValidatorFactory()</span><br><span class=\"line\">            .getValidator();</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">static</span> <span class=\"type\">Validator</span> <span class=\"variable\">validatorAll</span> <span class=\"operator\">=</span> Validation.byProvider(HibernateValidator.class)</span><br><span class=\"line\">            .configure()</span><br><span class=\"line\">            .failFast(<span class=\"literal\">false</span>)</span><br><span class=\"line\">            .buildValidatorFactory()</span><br><span class=\"line\">            .getValidator();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 校验遇到第一个不合法的字段直接返回不合法字段，后续字段不再校验</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;T&gt;    泛型</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> domain 待校验的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"type\">boolean</span> <span class=\"title function_\">validateFast</span><span class=\"params\">(T domain)</span> &#123;</span><br><span class=\"line\">        Set&lt;ConstraintViolation&lt;T&gt;&gt; validateResult = validatorFast.validate(domain);</span><br><span class=\"line\">        validateResult.stream()</span><br><span class=\"line\">                .findFirst()</span><br><span class=\"line\">                .ifPresent(filedError -&gt; log.error(filedError.getPropertyPath() + <span class=\"string\">&quot;: &quot;</span> + filedError.getMessage()));</span><br><span class=\"line\">        <span class=\"keyword\">return</span> validateResult.isEmpty();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">/**</span></span><br><span class=\"line\"><span class=\"comment\">     * 校验所有字段并返回不合法字段</span></span><br><span class=\"line\"><span class=\"comment\">     *</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> &lt;T&gt;    泛型</span></span><br><span class=\"line\"><span class=\"comment\">     * <span class=\"doctag\">@param</span> domain 待校验的对象</span></span><br><span class=\"line\"><span class=\"comment\">     */</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> &lt;T&gt; <span class=\"type\">boolean</span> <span class=\"title function_\">validateAll</span><span class=\"params\">(T domain)</span> &#123;</span><br><span class=\"line\">        Set&lt;ConstraintViolation&lt;T&gt;&gt; validateResult = validatorAll.validate(domain);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (ConstraintViolation&lt;T&gt; cv : validateResult) &#123;</span><br><span class=\"line\">            log.error(cv.getPropertyPath() + <span class=\"string\">&quot;: &quot;</span> + cv.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> validateResult.isEmpty();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>正常校验</li>\n</ol>\n"},{"title":"服务发现与注册","url":"/2025/05/03/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%B3%A8%E5%86%8C/","content":"<h1 id=\"EurekaServer\"><a href=\"#EurekaServer\" class=\"headerlink\" title=\"EurekaServer\"></a>EurekaServer</h1><ul>\n<li>启动类</li>\n</ul>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableEurekaServer</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EurekaServerApplication</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(EurekaServerApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>pom</li>\n</ul>\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">java.version</span>&gt;</span>1.8<span class=\"tag\">&lt;/<span class=\"name\">java.version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.build.sourceEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.build.sourceEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span>UTF-8<span class=\"tag\">&lt;/<span class=\"name\">project.reporting.outputEncoding</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">spring-boot.version</span>&gt;</span>2.7.6<span class=\"tag\">&lt;/<span class=\"name\">spring-boot.version</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">spring-cloud.version</span>&gt;</span>2021.0.5<span class=\"tag\">&lt;/<span class=\"name\">spring-cloud.version</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">properties</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring-cloud.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-dependencies<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>$&#123;spring-boot.version&#125;<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">type</span>&gt;</span>pom<span class=\"tag\">&lt;/<span class=\"name\">type</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">scope</span>&gt;</span>import<span class=\"tag\">&lt;/<span class=\"name\">scope</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencyManagement</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">            <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-server<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>application.properties</li>\n</ul>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">8761</span></span><br><span class=\"line\"><span class=\"attr\">spring.application.name</span>=<span class=\"string\">eureka-server-x1</span></span><br><span class=\"line\"><span class=\"comment\"># 仪表盘路径</span></span><br><span class=\"line\"><span class=\"attr\">eureka.dashboard.path</span>=<span class=\"string\">/</span></span><br></pre></td></tr></table></figure>\n\n<p>访问路径: <a href=\"http://localhost:8761/\">http://localhost:8761/</a></p>\n<p><img src=\"/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%B3%A8%E5%86%8C%5Cimage-20250428225451489-1745852098460-1.png\" alt=\"image-20250428225451489\"></p>\n<p><img src=\"/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%B3%A8%E5%86%8C%5Cimage-20250428225521158-1745852126114-3.png\" alt=\"image-20250428225521158\"></p>\n<h1 id=\"EurekaClient\"><a href=\"#EurekaClient\" class=\"headerlink\" title=\"EurekaClient\"></a>EurekaClient</h1><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@EnableEurekaClient</span></span><br><span class=\"line\"><span class=\"meta\">@SpringBootApplication</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">EurekaClientApplication</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        SpringApplication.run(EurekaClientApplication.class, args);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">11000</span></span><br><span class=\"line\"><span class=\"attr\">spring.application.name</span>=<span class=\"string\">client-x1</span></span><br><span class=\"line\"><span class=\"attr\">eureka.client.service-url.defaultZone</span>=<span class=\"string\">http://127.0.0.1:8761/eureka</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight xml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.boot<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-boot-starter-web<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.springframework.cloud<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">        <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>spring-cloud-starter-netflix-eureka-client<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%B3%A8%E5%86%8C%5Cimage-20250429215132530-1745934697473-1.png\" alt=\"image-20250429215132530\"></p>\n<p>EurekaServer集群搭建</p>\n<ol>\n<li>为了本地模拟，修改host，虚拟3个域名</li>\n</ol>\n<p>windows host 位置<code>C:\\Windows\\System32\\drivers\\etc</code></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> master</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> backup1</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span> backup2</span><br></pre></td></tr></table></figure>\n\n<ol start=\"2\">\n<li>在src&#x2F;resources目录下新增3个文件</li>\n</ol>\n<p>application-p1.properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">10001</span></span><br><span class=\"line\"><span class=\"comment\">#服务注册中心实例的主机名</span></span><br><span class=\"line\"><span class=\"attr\">eureka.instance.hostname</span>=<span class=\"string\">master</span></span><br><span class=\"line\"><span class=\"comment\">#服务注册中心的配置内容，指定服务注册中心的位置</span></span><br><span class=\"line\"><span class=\"attr\">eureka.client.serviceUrl.defaultZone</span>=<span class=\"string\">http://bak1:10002/eureka/,http://bak2:10003/eureka/</span></span><br></pre></td></tr></table></figure>\n\n<p>application-p2.properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">10002</span></span><br><span class=\"line\"><span class=\"comment\">#服务注册中心实例的主机名</span></span><br><span class=\"line\"><span class=\"attr\">eureka.instance.hostname</span>=<span class=\"string\">bak1</span></span><br><span class=\"line\"><span class=\"comment\">#服务注册中心的配置内容，指定服务注册中心的位置</span></span><br><span class=\"line\"><span class=\"attr\">eureka.client.serviceUrl.defaultZone</span>=<span class=\"string\">http://master:10001/eureka/,http://bak2:10003/eureka/</span></span><br></pre></td></tr></table></figure>\n\n<p>application-p3.properties</p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">server.port</span>=<span class=\"string\">10003</span></span><br><span class=\"line\"><span class=\"comment\">#服务注册中心实例的主机名</span></span><br><span class=\"line\"><span class=\"attr\">eureka.instance.hostname</span>=<span class=\"string\">bak1</span></span><br><span class=\"line\"><span class=\"comment\">#服务注册中心的配置内容，指定服务注册中心的位置</span></span><br><span class=\"line\"><span class=\"attr\">eureka.client.serviceUrl.defaultZone</span>=<span class=\"string\">http://master:10001/eureka/,http://bak1:10002/eureka/</span></span><br></pre></td></tr></table></figure>\n\n<ol start=\"3\">\n<li>由于是本地开发环境，我们直接以maven启动。当然，也可以选择jar启动。也可以在idea直接修改</li>\n</ol>\n<p><img src=\"/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%B3%A8%E5%86%8C%5Cimage-20250429215944958-1745935188940-3.png\" alt=\"image-20250429215944958\"></p>\n<figure class=\"highlight properties\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">mvn</span> <span class=\"string\">spring-boot:run -Dspring.profiles.active=p1</span></span><br><span class=\"line\"><span class=\"attr\">mvn</span> <span class=\"string\">spring-boot:run -Dspring.profiles.active=p2</span></span><br><span class=\"line\"><span class=\"attr\">mvn</span> <span class=\"string\">spring-boot:run -Dspring.profiles.active=p3</span></span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%B3%A8%E5%86%8C%5Cimage-20250429220120414-1745935284036-5.png\" alt=\"image-20250429220120414\"></p>\n<ol start=\"4\">\n<li>此时启动三个EurekaServer实例，集群搭建成功</li>\n</ol>\n<p><img src=\"/%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E4%B8%8E%E6%B3%A8%E5%86%8C%5Cimage-20250429220442210-1745935485497-7.png\" alt=\"image-20250429220442210\"></p>\n"},{"title":"about","url":"/about/index.html","content":""},{"title":"schedule","url":"/schedule/index.html","content":""},{"title":"tags","url":"/tags/index.html","content":""},{"title":"categories","url":"/categories/index.html","content":""},{"title":"推荐资料","url":"/others/index.html","content":"<h1 id=\"极客MySQL实战45讲\"><a href=\"#极客MySQL实战45讲\" class=\"headerlink\" title=\"极客MySQL实战45讲\"></a>极客MySQL实战45讲</h1><p><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C01%E8%AE%B2%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%EF%BC%9A%E4%B8%80%E6%9D%A1SQL%E6%9F%A5%E8%AF%A2%E8%AF%AD%E5%8F%A5%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84.html\">01讲基础架构：一条SQL查询语句是如何执行的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C02%E8%AE%B2%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%EF%BC%9A%E4%B8%80%E6%9D%A1SQL%E6%9B%B4%E6%96%B0%E8%AF%AD%E5%8F%A5%E6%98%AF%E5%A6%82%E4%BD%95%E6%89%A7%E8%A1%8C%E7%9A%84.html\">02讲日志系统：一条SQL更新语句是如何执行的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C03%E8%AE%B2%E4%BA%8B%E5%8A%A1%E9%9A%94%E7%A6%BB%EF%BC%9A%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BD%A0%E6%94%B9%E4%BA%86%E6%88%91%E8%BF%98%E7%9C%8B%E4%B8%8D%E8%A7%81.html\">03讲事务隔离：为什么你改了我还看不见</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C04%E8%AE%B2%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E7%B4%A2%E5%BC%95%EF%BC%88%E4%B8%8A%EF%BC%89.html\">04讲深入浅出索引（上）</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C05%E8%AE%B2%E6%B7%B1%E5%85%A5%E6%B5%85%E5%87%BA%E7%B4%A2%E5%BC%95%EF%BC%88%E4%B8%8B%EF%BC%89.html\">05讲深入浅出索引（下）</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C06%E8%AE%B2%E5%85%A8%E5%B1%80%E9%94%81%E5%92%8C%E8%A1%A8%E9%94%81%EF%BC%9A%E7%BB%99%E8%A1%A8%E5%8A%A0%E4%B8%AA%E5%AD%97%E6%AE%B5%E6%80%8E%E4%B9%88%E6%9C%89%E8%BF%99%E4%B9%88%E5%A4%9A%E9%98%BB%E7%A2%8D.html\">06讲全局锁和表锁：给表加个字段怎么有这么多阻碍</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C07%E8%AE%B2%E8%A1%8C%E9%94%81%E5%8A%9F%E8%BF%87%EF%BC%9A%E6%80%8E%E4%B9%88%E5%87%8F%E5%B0%91%E8%A1%8C%E9%94%81%E5%AF%B9%E6%80%A7%E8%83%BD%E7%9A%84%E5%BD%B1%E5%93%8D.html\">07讲行锁功过：怎么减少行锁对性能的影响</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C08%E8%AE%B2%E4%BA%8B%E5%8A%A1%E5%88%B0%E5%BA%95%E6%98%AF%E9%9A%94%E7%A6%BB%E7%9A%84%E8%BF%98%E6%98%AF%E4%B8%8D%E9%9A%94%E7%A6%BB%E7%9A%84.html\">08讲事务到底是隔离的还是不隔离的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C09%E8%AE%B2%E6%99%AE%E9%80%9A%E7%B4%A2%E5%BC%95%E5%92%8C%E5%94%AF%E4%B8%80%E7%B4%A2%E5%BC%95%EF%BC%8C%E5%BA%94%E8%AF%A5%E6%80%8E%E4%B9%88%E9%80%89%E6%8B%A9.html\">09讲普通索引和唯一索引，应该怎么选择</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C10%E8%AE%B2MySQL%E4%B8%BA%E4%BB%80%E4%B9%88%E6%9C%89%E6%97%B6%E5%80%99%E4%BC%9A%E9%80%89%E9%94%99%E7%B4%A2%E5%BC%95.html\">10讲MySQL为什么有时候会选错索引</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C11%E8%AE%B2%E6%80%8E%E4%B9%88%E7%BB%99%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%AD%97%E6%AE%B5%E5%8A%A0%E7%B4%A2%E5%BC%95.html\">11讲怎么给字符串字段加索引</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C12%E8%AE%B2%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E7%9A%84MySQL%E4%BC%9A%E2%80%9C%E6%8A%96%E2%80%9D%E4%B8%80%E4%B8%8B.html\">12讲为什么我的MySQL会“抖”一下</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C13%E8%AE%B2%E4%B8%BA%E4%BB%80%E4%B9%88%E8%A1%A8%E6%95%B0%E6%8D%AE%E5%88%A0%E6%8E%89%E4%B8%80%E5%8D%8A%EF%BC%8C%E8%A1%A8%E6%96%87%E4%BB%B6%E5%A4%A7%E5%B0%8F%E4%B8%8D%E5%8F%98.html\">13讲为什么表数据删掉一半，表文件大小不变</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C14%E8%AE%B2count%E8%BF%99%E4%B9%88%E6%85%A2%EF%BC%8C%E6%88%91%E8%AF%A5%E6%80%8E%E4%B9%88%E5%8A%9E.html\">14讲count这么慢，我该怎么办</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C15%E8%AE%B2%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%B8%80%EF%BC%89%EF%BC%9A%E6%97%A5%E5%BF%97%E5%92%8C%E7%B4%A2%E5%BC%95%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98.html\">15讲答疑文章（一）：日志和索引相关问题</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C16%E8%AE%B2%E2%80%9Corderby%E2%80%9D%E6%98%AF%E6%80%8E%E4%B9%88%E5%B7%A5%E4%BD%9C%E7%9A%84.html\">16讲“orderby”是怎么工作的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C17%E8%AE%B2%E5%A6%82%E4%BD%95%E6%AD%A3%E7%A1%AE%E5%9C%B0%E6%98%BE%E7%A4%BA%E9%9A%8F%E6%9C%BA%E6%B6%88%E6%81%AF.html\">17讲如何正确地显示随机消息</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C18%E8%AE%B2%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%BA%9BSQL%E8%AF%AD%E5%8F%A5%E9%80%BB%E8%BE%91%E7%9B%B8%E5%90%8C%EF%BC%8C%E6%80%A7%E8%83%BD%E5%8D%B4%E5%B7%AE%E5%BC%82%E5%B7%A8%E5%A4%A7.html\">18讲为什么这些SQL语句逻辑相同，性能却差异巨大</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C19%E8%AE%B2%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%8F%AA%E6%9F%A5%E4%B8%80%E8%A1%8C%E7%9A%84%E8%AF%AD%E5%8F%A5%EF%BC%8C%E4%B9%9F%E6%89%A7%E8%A1%8C%E8%BF%99%E4%B9%88%E6%85%A2.html\">19讲为什么我只查一行的语句，也执行这么慢</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C20%E8%AE%B2%E5%B9%BB%E8%AF%BB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%8C%E5%B9%BB%E8%AF%BB%E6%9C%89%E4%BB%80%E4%B9%88%E9%97%AE%E9%A2%98.html\">20讲幻读是什么，幻读有什么问题</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C21%E8%AE%B2%E4%B8%BA%E4%BB%80%E4%B9%88%E6%88%91%E5%8F%AA%E6%94%B9%E4%B8%80%E8%A1%8C%E7%9A%84%E8%AF%AD%E5%8F%A5%EF%BC%8C%E9%94%81%E8%BF%99%E4%B9%88%E5%A4%9A.html\">21讲为什么我只改一行的语句，锁这么多</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C22%E8%AE%B2MySQL%E6%9C%89%E5%93%AA%E4%BA%9B%E2%80%9C%E9%A5%AE%E9%B8%A9%E6%AD%A2%E6%B8%B4%E2%80%9D%E6%8F%90%E9%AB%98%E6%80%A7%E8%83%BD%E7%9A%84%E6%96%B9%E6%B3%95.html\">22讲MySQL有哪些“饮鸩止渴”提高性能的方法</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C23%E8%AE%B2MySQL%E6%98%AF%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E6%95%B0%E6%8D%AE%E4%B8%8D%E4%B8%A2%E7%9A%84.html\">23讲MySQL是怎么保证数据不丢的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C24%E8%AE%B2MySQL%E6%98%AF%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E4%B8%BB%E5%A4%87%E4%B8%80%E8%87%B4%E7%9A%84.html\">24讲MySQL是怎么保证主备一致的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C25%E8%AE%B2MySQL%E6%98%AF%E6%80%8E%E4%B9%88%E4%BF%9D%E8%AF%81%E9%AB%98%E5%8F%AF%E7%94%A8%E7%9A%84.html\">25讲MySQL是怎么保证高可用的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C26%E8%AE%B2%E5%A4%87%E5%BA%93%E4%B8%BA%E4%BB%80%E4%B9%88%E4%BC%9A%E5%BB%B6%E8%BF%9F%E5%A5%BD%E5%87%A0%E4%B8%AA%E5%B0%8F%E6%97%B6.html\">26讲备库为什么会延迟好几个小时</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C27%E8%AE%B2%E4%B8%BB%E5%BA%93%E5%87%BA%E9%97%AE%E9%A2%98%E4%BA%86%EF%BC%8C%E4%BB%8E%E5%BA%93%E6%80%8E%E4%B9%88%E5%8A%9E.html\">27讲主库出问题了，从库怎么办</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C28%E8%AE%B2%E8%AF%BB%E5%86%99%E5%88%86%E7%A6%BB%E6%9C%89%E5%93%AA%E4%BA%9B%E5%9D%91.html\">28讲读写分离有哪些坑</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C29%E8%AE%B2%E5%A6%82%E4%BD%95%E5%88%A4%E6%96%AD%E4%B8%80%E4%B8%AA%E6%95%B0%E6%8D%AE%E5%BA%93%E6%98%AF%E4%B8%8D%E6%98%AF%E5%87%BA%E9%97%AE%E9%A2%98%E4%BA%86.html\">29讲如何判断一个数据库是不是出问题了</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C30%E8%AE%B2%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%BA%8C%EF%BC%89%EF%BC%9A%E7%94%A8%E5%8A%A8%E6%80%81%E7%9A%84%E8%A7%82%E7%82%B9%E7%9C%8B%E5%8A%A0%E9%94%81.html\">30讲答疑文章（二）：用动态的观点看加锁</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C31%E8%AE%B2%E8%AF%AF%E5%88%A0%E6%95%B0%E6%8D%AE%E5%90%8E%E9%99%A4%E4%BA%86%E8%B7%91%E8%B7%AF%EF%BC%8C%E8%BF%98%E8%83%BD%E6%80%8E%E4%B9%88%E5%8A%9E.html\">31讲误删数据后除了跑路，还能怎么办</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C32%E8%AE%B2%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%98%E6%9C%89kill%E4%B8%8D%E6%8E%89%E7%9A%84%E8%AF%AD%E5%8F%A5.html\">32讲为什么还有kill不掉的语句</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C33%E8%AE%B2%E6%88%91%E6%9F%A5%E8%BF%99%E4%B9%88%E5%A4%9A%E6%95%B0%E6%8D%AE%EF%BC%8C%E4%BC%9A%E4%B8%8D%E4%BC%9A%E6%8A%8A%E6%95%B0%E6%8D%AE%E5%BA%93%E5%86%85%E5%AD%98%E6%89%93%E7%88%86.html\">33讲我查这么多数据，会不会把数据库内存打爆</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C34%E8%AE%B2%E5%88%B0%E5%BA%95%E5%8F%AF%E4%B8%8D%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8join.html\">34讲到底可不可以使用join</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C35%E8%AE%B2join%E8%AF%AD%E5%8F%A5%E6%80%8E%E4%B9%88%E4%BC%98%E5%8C%96.html\">35讲join语句怎么优化</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C36%E8%AE%B2%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%B4%E6%97%B6%E8%A1%A8%E5%8F%AF%E4%BB%A5%E9%87%8D%E5%90%8D.html\">36讲为什么临时表可以重名</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C37%E8%AE%B2%E4%BB%80%E4%B9%88%E6%97%B6%E5%80%99%E4%BC%9A%E4%BD%BF%E7%94%A8%E5%86%85%E9%83%A8%E4%B8%B4%E6%97%B6%E8%A1%A8.html\">37讲什么时候会使用内部临时表</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C38%E8%AE%B2%E9%83%BD%E8%AF%B4InnoDB%E5%A5%BD%EF%BC%8C%E9%82%A3%E8%BF%98%E8%A6%81%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8Memory%E5%BC%95%E6%93%8E.html\">38讲都说InnoDB好，那还要不要使用Memory引擎</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C39%E8%AE%B2%E8%87%AA%E5%A2%9E%E4%B8%BB%E9%94%AE%E4%B8%BA%E4%BB%80%E4%B9%88%E4%B8%8D%E6%98%AF%E8%BF%9E%E7%BB%AD%E7%9A%84.html\">39讲自增主键为什么不是连续的</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C40%E8%AE%B2insert%E8%AF%AD%E5%8F%A5%E7%9A%84%E9%94%81%E4%B8%BA%E4%BB%80%E4%B9%88%E8%BF%99%E4%B9%88%E5%A4%9A.html\">40讲insert语句的锁为什么这么多</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C41%E8%AE%B2%E6%80%8E%E4%B9%88%E6%9C%80%E5%BF%AB%E5%9C%B0%E5%A4%8D%E5%88%B6%E4%B8%80%E5%BC%A0%E8%A1%A8.html\">41讲怎么最快地复制一张表</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C42%E8%AE%B2grant%E4%B9%8B%E5%90%8E%E8%A6%81%E8%B7%9F%E7%9D%80flushprivileges%E5%90%97.html\">42讲grant之后要跟着flushprivileges吗</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C43%E8%AE%B2%E8%A6%81%E4%B8%8D%E8%A6%81%E4%BD%BF%E7%94%A8%E5%88%86%E5%8C%BA%E8%A1%A8.html\">43讲要不要使用分区表</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C44%E8%AE%B2%E7%AD%94%E7%96%91%E6%96%87%E7%AB%A0%EF%BC%88%E4%B8%89%EF%BC%89%EF%BC%9A%E8%AF%B4%E4%B8%80%E8%AF%B4%E8%BF%99%E4%BA%9B%E5%A5%BD%E9%97%AE%E9%A2%98.html\">44讲答疑文章（三）：说一说这些好问题</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C%E5%BC%80%E7%AF%87%E8%AF%8D%E8%AE%B2%E8%BF%99%E4%B8%80%E6%AC%A1%EF%BC%8C%E8%AE%A9%E6%88%91%E4%BB%AC%E4%B8%80%E8%B5%B7%E6%9D%A5%E6%90%9E%E6%87%82MySQL.html\">开篇词讲这一次，让我们一起来搞懂MySQL</a><br><a href=\"%E6%9E%81%E5%AE%A2MySQL%E5%AE%9E%E6%88%9845%E8%AE%B2%5C%E7%9B%B4%E6%92%AD%E5%9B%9E%E9%A1%BE%E8%AE%B2%E6%9E%97%E6%99%93%E6%96%8C%EF%BC%9A%E6%88%91%E7%9A%84MySQL%E5%BF%83%E8%B7%AF%E5%8E%86%E7%A8%8B.html\">直播回顾讲林晓斌：我的MySQL心路历程</a></p>\n"}]